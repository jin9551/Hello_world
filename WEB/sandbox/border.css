div.basic {
    width: 400px;
    height: 400px;

    /* 요즘은 퍼센트를 사용한다. 브라우저 창에 상대적인 크기가 됩니다. */
}
.min_max_width {
    min-width: 450px;
    max-width: 450px;
    text-align: left;
    padding: 5px;
    margin: 0px;

    /* min-width 프로퍼티는 브라우저 창이 축소됐을 때 표시할 수 있는 최소 크기를 지정하고
    max-width 프로퍼티는 창을 넓혔을 때 확장할 수 있는 최대 너비 나타낸다.
    
    max-width는 너무 큰 창에서 텍스트 줄이 너무 넓게 표시되지 않게 할 수 있으며
    min-width는 너무 좁게 표시되지 않게 할 수 있다.*/
}


.min_max_height {
    min-width: 450px;
    max-width: 450px;
    
    /* 박스가 컨텐츠를 담을 만큼 크지 않으면 콘텐츠는 박스 밖으로 벗어나 지저분하게 된다.
    overflow를 이용해서 정리한다. */

}


.overflow01 {
    overflow:hidden;
}

.overflow02 {
    overflow:scroll;
}

/* 내용이 넘칠 때 overflow
overflow 프로퍼티는 박스의 크기보다 박스 안에 있는 내용이 더 많은 경우에 취해야 할 조치를 브라우저에게 알려준다.

hidden: 간단히 박스의 크기보다 큰 부분의 콘텐츠를 숨긴다.

scroll: 박스에 스크롤바를 추가하므로, 보이지 않는 콘테츠에 대해서는 스크롤바를 움직여 볼 수 있다.*/



/* 테두리(border), 마진(margin), 패딩(padding)*/

/* 
border는 박수의 테두리를 만든다. 테두리가 보이지 않거나 두께를 0 픽셀로 지정했더라도 모든 박스에는 테두리가 있다.
margin은 테두리 밖에 위치한다. margin의 너비를 설정하면 두 개의 인접한 박슷 사이에 여백을 만들 수 있다.
padding은 박스의 테두리와 박스 안에 포함된 콘텐츠 사이의 여백이다. paddingdmf 추가하여 콘텐츠의 가독성을 높일 수 있다.     




margin   _________________________________________
border   -----------------------------------------
padding  =========================================
contents ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
이렇게 레이어가 이루어져 있다.


margin   _________________________________________ ㄱ
border   ----------------------------------------- ㅣ
padding  ========================================= ㅣ
contents ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  박스 1
padding  ========================================= ㅣ
border   ----------------------------------------- ㅣ
margin   _________________________________________ ㅣ
             마진으로 이루어진 공간
margin   _________________________________________ ㄱ
border   ----------------------------------------- ㅣ
padding  ========================================= ㅣ
contents ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  박스 2
padding  ========================================= ㅣ
border   ----------------------------------------- ㅣ
margin   _________________________________________ ㅣ

*/


/* border width 테두리 두께*/

p.one {
    border-width: thin;
    border-width: medium;
    border-width: thick;
}


p.two {
    border-top-width: 2px;
    border-right-width: 1px;
    border-bottom-width: 1px;
    border-left-width: 2px;

    /* border-width는 thin, medium, thick 세 개의 값 중에 하나를 사용하거나 픽셀 단위로 지정할 수 있다.
    또한 위의 네개의 프로퍼티를 사용하여 테두리 네 변의 두께를 개별적을 제어할 수 있다.
    
    그리고 다음과 같이 네 개의 테두리 값에 대해 각기 다른 두께를 하나의 프로퍼티에 지정할 수 있다.
    */
}

p.three {
    border-width: 2px 1px 1px 2px;

    /* 값의 순서는 시계방향(상, 우, 하, 좌)이다. */
}



/* border style 테두리 스타일*/

p.one { 
    border-style: solid;

    /* border-style에서 설정할 수 있는 값은 다음과 같다.
    
    solid : 실선
    dotted : 점선
    dashed : 긴 점선
    double : 이중선
    groove : 움푹 들어간 입체적인 선
    ridge : 앞으로 튀어나온 입체적인 선
    inset : 박스 전체가 앞으로 튀어나온 입체적인 선
    outset: 박스 전체가 앞으로 튀어나온 입체적인 선
    hidden/none : 테두리 숨기기
    

    border-top-style, border-left-style, border-bottom-style, border-left-style 등등을 이용해서 개별적으로 변경할 수 있다.
    */
}



/* border color 테두리 색상 */

p.one {
    border-color: skyblue;

    /* 지금까지 봤던 테두리 프로퍼티와 마찬가지로 각 면의 테두리 색상을 개별적으로 제어할 수 있다.
    border-top-color 등등... */
}


/* border 단축형 */

p {
    width: 250px;
    border: 3px dotted red; 


    /* border 프로퍼티는 하나의 프로퍼티에 테두리의 너비, 스타일, 색상을 지정할 수 있다.
    단, 갓ㅂ은 특정 순서대로 지정해야한다.
    두깨, 스타일, 색상 순인거 같다. */
}



/* border-image */

/* css3: 이미지 테두리 */

/* border-image 프로퍼티는 이미지를 박스의 테두리에 적용한다. 이때 이미지를 배경 이미지로 간주하고 이 이미지를 다음과 같은 아홈조각으로 분할한다.

 ㅇ ㅇ ㅇ
 ㅇ ㅁ ㅇ
 ㅇ ㅇ ㅇ

border-image 프로퍼티에 설정하는 세 가지 정보는 다음과 같다.

1. 이미지의 URL
2. 이미지 영역
3. 이미지 표시 방법(설정값은 다음과 같다).
    stretch 이미지를 늘린다.
    repeat 이미지를 반복한다.
    round 이미지를 적절한 크기로 반복한다(가로 세로에 맞게 이미지 크기를 변경).
    
-moz-border-image와 -webkit-border-image 프로퍼티가 css 명세서에는 없지만 초기 버전의 파이어폭스와 크롬, 사파리에서 이러한 효과를 표시하는 데 필요하다.

브라우져        렌더링 엔진     접두사          
--------------------------------------------------
파이어폭스      게코(Gecko)     -moz-
크롬,사파리     웹킷(Webkit)    -webkit-


*/   


p.img {
    -moz-border-image: url("images/dot.gif") 11 11 11 11 stretch;
    /* 이미지는 좌측상단, 우측상단, 우측하단, 좌측하단 순으로 시계방향으로 배치된다.
    마지막에 있는 stretch등의 설정값은 각 면의 이미지에 적용된다. */
    -webkit-border-image: url("images/dot.gif") 11 11 11 11 stretch;
    border-image: url("images/dot.gif") 11 11 11 11 stretch;
}


/* box-shadow 박스 그림자 */

/* text-shadow와 유사하게 동작한다. */

p.shadow {
    -moz-box-shadow: 5px 5px 5px 5px #777777;
    -webkit-box-shadow: 5px 5px 5px 5px #777777;
    box-shadow:  5px 5px 5px 5px #777777;

    /* 수평 거리, 수직 거리, 번짐 거리, 확장 거리와 색상 */
}


/* css3: 둥근 모서리 */

/* border-radius */

/* css3에서는 border-radius 프로퍼티를 사용해 박스에 둥근 모서리를 만들 수 있는 기능을 도입했다.
값은 반지름의 크기를 의미라며 단위는 픽셀이다. */

/* 
    border-top-right-radius
    border-bottom-right-radius
    border-bottom-left-radius
    border-top-left-radius
    네 가지 프로퍼티로 각 모서리의 값을 개별적으로 지정할 수 있다.    
*/

p.rndcorner {
    border: 5px solid red;
    padding: 20px;
    width: 275px;
    border-radius: 10px;
    -moz-border-radius: 10px;
    -webkit-border-radius: 10px;
    /* border-radiius 프로퍼티가 지원이 안되는 브라우저를 위한 라인 */
}

p.oval {
    border-top-left-radius: 80px 50px;
    /* 이런식으로 가로 세로의 반지름을 다르게 하면 타원형이 나온다. */
}