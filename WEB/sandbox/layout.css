/* 레이아웃 */

/* position */

/* position:static 정상적인 흐름 */

/* 기본적인 방식으므로 CSS 프로퍼티를 지정할 필요는 없으며, 구문은 다음과 같다. 
position:static;  */

body {
    width: 750px;
    font-family: Arial, Verdana, sans-serif;
    color: #665544;
}

h1 {
    background-color: #efefef;
    padding:10px;
}
p {
    width: 450px;
}


/* position:relative 상대 위치 */

/* 상대 위치는 요소가 정상적인 흐름에 있었을 경우의 위치를 기준으로 요소를 이동한다.
예컨대 정상적인 흐름보다 10픽실 아래 또는 20% 오른쪽으로 이동할 수 있다.
먼저 position:relative; 구문을 사용하여 요소가 상대적으로 위치한다는 사실을 나타낸다.
그런 다음 오프셋 프로퍼티 (top,bottom,left, right)를 사용하여 요소를 정상적인 흐름의 위치에서 얼마나 멀리 이동할지 결정한다. */

p.example {
    position:relative;
    top: 10px;
    left: 100px;
}


/* position: absolute 절대위치 */

/* position 프로퍼티의 값이 absolute이면 박스는 정상적인 흐름에서 벗어나며 페이지에 있는 다른 요소의 위치에 영향을 미치지 않는다(원래 그 위치에 없는 듯이 동작한다). */

h1{
    position: absolute;
    top:0px;
    left:500px;
    width: 250px;
}


/* position:fixed 고정위치 */

/* 고정 위치는 절대 위치의 한 유형으로 position 프로퍼티의 값을 fixed로 설정한다.
고정 위치는 브라우저 창을 기준으로 요소의 위치를 지정한다. 따라서 사용자가 페이지 아래로 스크롤 하여도 동일한 위치에 머문다. */

h1 {
    position:fixed;
    top: 0px;
    left: 0px;
    padding: 10px;
    margin: 0px;
    width: 100%;
}


/* z-index 겹치는 요소 */

/* 상대, 고정, 절대 위치를 사용할 경우 박스가 겹쳐질 수 있다. 이때 HTML 코드에서 뒤에 있는 요소가 페이지에서 앞에 있는 요소의 위에 위치할 수도 있다.
만일 위에 위치할 요소를 제어하고 싶다면 z-index 프로퍼티를 사용하면 된다. z-index 프로퍼티의 값은 숫자이며 숫자가 큰 요소가 더 위쪽에 위치한다.
예컨대 z-index 프로퍼티의 값이 10인 요소는 z-index 프로퍼티의 값이 5인 요소 위에 나타난다. */

h1 {
    position: fixed;
    top: 0px;
    left: 0px;
    margin: 0px;
    padding: 10px;
    width: 100%;
    background-color: #efefef;
    z-index: 10;
}

 p {
    position: relative;
    top: 70px;
    left: 70px;
} 


/* float 부유 요소 */

/* float 프로퍼티는 요소를 정상적인 흐름에 배치하며 부모 요소의 왼쪽 또는 오른쪽에 위치한다.
부모 요소 안에 있는 모든 내용은 float 프로퍼티를 적용한 요소의 주위에 위치한다.

float 프로퍼티의 값이 left면 부유 요소는 왼쪽에 위치하며 페이지 내용은 오른쪽에 위치한다.
 반면에 float 프로퍼티의 값이 right이면 부유 요소는 오른쪽에 위치하며 페이지 내용은 왼쪽에 위치한다.

flaot 프로퍼티를 사용할 경우 width 프로퍼티도 함께 사용하여 부유 요소의 너비를 지정할 수도 있다. 
만일 너비를 지정하지 않으면 일관성이 없어지거나 정상적인 흐름에서처럼 박스가 부모 요소의 전체 너비를 차지할 수도 있다.*/

blockquote {
    float: right;
    width: 275px;
    font-size: 130%;
    font-style: italic;
    font-family: Georgia, Times, serif;
    margin: 0px 0px 10px 10px;
    padding: 10px;
    border-top: 1px solid #665544;
    border-bottom: 1px solid #665544;
}

/* float를 사용해 요소를 나란히 배치하는 방법 */

/* float 프로퍼티로 박스가 나란히 배치되는 레이아웃을 구성할 수 있다. */

body {
    width: 750px;
    font-family: Arial, Verdana, sans-serif;
    color: #665544;
}

p{
    width: 230px;
    float: left;
    margin: 5px;
    padding: 5px;
    background-color: #efefef;

    /* 가장 큰 단락의 높이로 단락의 높이를 동일하게 설정하면 문제를 해결할 수 있자만 단락이나 열에서 텍스트의 양이 변할 수 있기떄문에 적합한 방법은 아니다. */
}

/* clear float 제거 */

/* clear 프로퍼티는 부유 박스 뒤에 나타는 박스가 인접하지 않도록 배치하며, 다음과 같은 값을 설정할 수 있다. 

left 
박스의 왼쪽에 다른 요소가 위치하지 못하게 한다.

right
박스의 오른쪽에 다른 요소가 위치하지 못하게 한다.

both
박스의 양쪽에 다른 요소가 위치하지 못하게 한다.

none
박스의 위치를 제약하지 않는다.

*/

.clear {
    clear: left;
}

/* 부유 요소의 부모: 문제점 */

/* 부모 요소가 부유 요소만 포함한다면 일부 브라우저는 부모요소의 높이를 0픽셀로 처리한다. */

div {
    border: 1px solid #665544;

    /* 해결방안 */
    overflow: auto;
    width: 100%;
}


/* float를 사용한 다중 열 레이아웃 생성 */

/* 만흥ㄴ 웹 페이지 디자인에서 다중열을 사용한다. 이 작업은 각 열을 나타내는 <div> 요소를 사용하여 수행할 수 있다.
다음 세 가지 css 프로퍼티가 서로의 옆에 열을 배치하는 데 사용된다.

width
열의 너비를 설정한다.

float
서로의 옆에 열을 배치한다.

margin
열 사이의 여백을 생성한다.*/


.column1of3, .column2of3, .column3of3 {
    width: 300px;
    float: left;
    margin: 10px;
}

