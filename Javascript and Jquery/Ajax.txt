what's Ajax?

Ajax(Asynchronous JavaScript and XML)란 비동기 방식의 JavaScript와 XML을 가르킵니다,
동기방식과 비동기 방식의 차이점에 대해서 간단히 설명하겠습니다.
동기방식은 서버에 신호를 보냈을떄 응답이 돌아와야 다음 동작을 수행할 수 있고 비동기 방식은 그와 반대로 신호를 보냈을 떄
응답 상태와 상관없이 다음 동작을 수행할 수 있다는 점이 다릅니다.

Ajax를 이용하는 이유는 화면 전환 없이 클라이언트(사용자 컴퓨터)와 서버(서비스를 제공하는 컴퓨터)간에
XML, JSON(JavaScript Object Notation), 텍스트, HTML등의 정보를 교환하기 위해서입니다.
다시 말해 Ajax를 이용하면 사용자가 서버에 자료를 요청할 때 화면 전환 없이 요청한 자료를 전송받을 수 있습니다.
또한 자료를 요청할 경우 어느 정도 시간이 소요되는 데 반해 Ajax를 이요하면 사용자가 기다릴 필요 없이
다른 작업을 바로 수행할 수 있습니다. 

@Ajax 사용 전 방식

클라이언트 -> 서버 -> 클라이언트 

서버에서 응답이 올때까지 클라이언트는 아무것도 할 수 없다.

@Ajax 사용 후 방식

클라이언트 <-> 서버

Ajax를 사용해 서버에 자료를 요청할 경우 서버 스크립트 페이지를 거치지 않아도 자료를 받아올 수 있습니다.
즉, 사용자는 서버에 자료를 요청하는 사이에도 다른 작업을 할 수 있습니다.


Ajax를 테스트하려면 웹서버(Web server)가 필요합니다.


*웹서버 설치하기

웹 서버는 웹 서비스를 제공하는 컴퓨터를 말합니다. 완성된 웹 문서를 컴퓨터에 저장만 해둔다면 외부에 있는 
사용자는 완성된 웹 문서를 볼 수 없어 서비스를 받을 수 없습니다. 외부에 있는 사용자가 완성된 웹 문서를 볼 수 있도록
하려면 웹 서버를 구축하고 웹 서버에 완성된 HTML문서를 저장해야 합니다.

Ajax를 이용해 사용자가 폼에 입력 요소를 작성해서 데이터를 전송하고 응답을 요청하는 테스트를 수행하려면
웹 서버도 필요하지만 데이터를 전송하여 요청한 응답을 전송해 줄 액션 페이지도 필요합니다.
이때 일반적으로 이 액션 페이지는 서버측 스크립트 페이지인 PHP, ASP, JSP를 이용해 작성합니다.
서버 측 스크립트 페이지는 전송된 데이터를 이용하여 정상적인 데이티인지 검사한 후 응답값을 되돌려 전송해 줍니다.
이 서버측 스크립트 페이지는 서버 컴퓨터에 저장되어 있어야 정상적으로 작동합니다.



#나는 Bitnami MAMP를 이용해서 로컬 웹 서버를 호스팅했다.


##Parsing이란?

#파싱은 parse에 -ing를 붙인 형태입니다. 주로 어떤 데이터를 다른 모양으로 가공하는 걸 말합니다.
예를 들어 parseInt(3)은 3이라는 스트링형 데이터를 다른 모양(정수)로 가공하는 걸 말합니다.




@Ajax로 데이터 바인딩하기

바인딩은 비동기 통신 기술을 이용하여 서버 데이터베이스에 데이터를 요청하고, 데이터 베이스에 요청한 데이터를 받아와
HTML문단 태그에 결합하는 것을 일컫습니다.


ajax({
    url:"전송 페이지"(action url),
    type:"전송방식(get,post 방식),
    data:"전송할 데티어",
    dataType:"요청한 데이터 형식"(html,xml,json,text,jsonp),
    success:function(){
        전송 성공하면 실행될 코드;
    },
    error:function(){
        전송 실패하면 실행될 코드;
    }
})


#JSON이란?
자바스크립트의 객체 표기법을 JSON(JavaScript Object NOtation)이라고 부릅니다,
JSON은 데이터를 전달할 때 사용하는 표준 형식으로. 속성(Key)과 값(Value)이 하나의 쌍을 이루고 있습니다,

예) {"속성1":값1, "속성2":값2, ... "속성n":속성n}


#XML이란?
XML(eXtensible Markup Language)은 확장 가능한 언어이므로 태그명을 사용자가 임의로 작성할 수 있습니다.
이렇게 사용자가 임의의 태그명을 사용할 수 있기 때문에 많은 지식이 없어도 됩니다.
즉, 서버의 데이터를 XML데이터로 가공하는 것은 어렵지 않습니다. 그래서 XML은 주로 데이터를 배포할 
목적으로 사용합니다.

예)
XML 기본형은 다음과 같습니다. 상단에는 버전과 인코딩 방식을 선언하고 사용자가 임의로 시작 태그와 종료 태그를 사용하여
구조화된 데이터를 만듭니다.
<?xml version="1.0" encoding="UTF-8"?>
<tag1>
<tag2>내용</tag2>
</tag1>


@자바스크립트의 보안 정책과 외부 데이터 바인딩하기

자바스크립트의 보안 정책은 자바스크립트로 A 사이트의 데이터를 B사이트로 불러오는 것을 허용하지 않습니다,
이 정책을 동일 출처 원칙(Same-origin policy)이라 합니다. 즉, ajax() 메서드로 서로 다른 도메인의
데이터를 전송할 수 없을 뿐만 아니라 교차 도메인(Cross-Domain)도 허용하지 않습니다.

서로 다른 사이트에서 데이털르 서로 주고 받으려면 서버 언어를 사용해 데이터를 가져오거나 JSONP를 사용하는 방법이 있습니다.
서버 언어를 사용하는 방법은 서로 다른 사이트에서 데이터를 요청하고 이를 ajax로 가공하면 됩니다.
이 방법은 주로 관리자가 직접 접근할 수 없는 외부 서버의 데이터를 가져올 때 사용합니다.
JSONP를 사용하는 방법은 동일 출처 보안 정책을 피해야 하고 관리자의 외부 서버 접근이 가능해야 한다는 전제 조건이 필요합니다.
이 방법은 교차 도메인으로 데이터를 불러올 때 사용합니다.



